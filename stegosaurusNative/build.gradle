apply plugin: 'cpp'

version = 1.0

task cleanSwig(type: Delete)  {
  delete 'src/main/cpp/stegosaurus_wrap.cpp'
}

clean.dependsOn cleanSwig

task swig(type:Exec) {
  ext.swigPath = "src/main/cpp/stegosaurus.i"
  ext.swigOut = "src/main/cpp/stegosaurus_wrap.cpp"
  /* XXX This is no good */
  ext.swigOutDir = buildDir.getPath() + "/swigClasses/com/stegosaurus/cpp"
  ext.swigPackage = "com.stegosaurus.cpp"
  (new File(swigOutDir)).mkdirs()
  commandLine "swig", "-package", swigPackage, "-c++", "-java",
              "-outdir", swigOutDir, "-o", swigOut, swigPath
}

model {
  components {
    stegosaurus(NativeLibrarySpec) {
      sources {
        cpp {
          source {
            srcDirs "src/main/cpp", "src/main/c"
            include "**/*.cpp", "**/*.c"
          }
          exportedHeaders {
            srcDirs "src/main/cpp", "src/main/c"
            include "**/*.h"
          }
        }
      }
      binaries.all {
        if(toolChain in Gcc) {
          cppCompiler.args "-O2", "-Wall", "-Wextra", "-g", "-pedantic",
                           "-Wsign-compare", "-I", System.properties.'java.home' + "/../include",
                           "-I", System.properties.'java.home' + "/../include/linux"
          linker.args "-ljpeg"
        }
      }
    }
    stegotest(NativeExecutableSpec) {
      binaries.all {
        if(toolChain in Gcc) {
          linker.args "-lgtest", "-ljpeg", "-lpthread"
        }
      }
      sources {
        cpp {
          lib library: 'stegosaurus', linkage: 'static'
          source {
            srcDir "src/test/cpp/"
            include "**/*.cpp"
          }
        }
      }
    }
  }

}

/* Not all the tasks we need to add dependencies to exist at first, so
 * we have to wait until the project has been evaluated in its entirety.
 */
tasks.whenTaskAdded { t ->
  /* Make the installStegotestExecutable task depend on us copying over
   * the resources */
  if (t.name == "installStegotestExecutable") {
    /* Inexplicably, t.destinationDir is null. Docs say it shouldn't be the case,
     * but there you are. So we manually copy stuff over relative to the top
     * build dir. */
    task(resourcesCopy, type:Copy) {
      ext.resourcePath = projectDir.getPath() + "/src/test/resources/cpp"
      ext.targetPath = buildDir.getPath() + "/exe/stegotest/resources"
      file(targetPath).mkdirs()
      from(file(resourcePath))
      into(file(targetPath))
    }
    t.dependsOn resourcesCopy
    task(test, type:Exec, dependsOn: t) {
      workingDir buildDir.getPath() + "/exe/stegotest"
      commandLine "./stegotest"
    }
  }
  if (t.name == "compileStegosaurusSharedLibraryStegosaurusCpp") {
    /* SWIG generates some sources, so it's best to have it generated as early
     * as possible, and extractHeaders is the first in the dependency chain of
     * compilation */
    t.dependsOn swig
  }

}
